(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["ReactTransact"] = factory(require("react"));
	else
		root["ReactTransact"] = factory(root["React"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(11);
	module.exports = __webpack_require__(12);


/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var Call_1 = __webpack_require__(9);
	var Task_1 = __webpack_require__(4);
	exports.invariant = function (predicate, message) {
	    if (!predicate) {
	        throw new Error(message);
	    }
	};
	exports.shallowEqual = function (a, b) {
	    if (a === b) {
	        return true;
	    }
	    var keysA = Object.keys(a);
	    var keysB = Object.keys(b);
	    if (keysA.length !== keysB.length) {
	        return false;
	    }
	    var hasOwn = Object.prototype.hasOwnProperty;
	    for (var i = 0; i < keysA.length; i++) {
	        if (!hasOwn.call(b, keysA[i]) || a[keysA[i]] !== b[keysA[i]]) {
	            return false;
	        }
	    }
	    return true;
	};
	exports.getDisplayName = function (C) {
	    return C.displayName || C.name || 'Component';
	};
	exports.compact = function (a) {
	    return a.filter(function (x) {
	        return x !== null && typeof x !== 'undefined';
	    });
	};
	/*
	 * Applies the value `A` or `Promise<A>` to the function `fn`
	 */
	exports.applyValueOrPromise = function (fn, x) {
	    if (typeof x.then === 'function') {
	        x.then(fn);
	    } else {
	        fn(x);
	    }
	};
	exports.flattenComponents = function (components) {
	    return recur(components, []);
	    function recur(components, acc) {
	        if (components.length === 0) {
	            return acc;
	        } else {
	            return recur(components.reduce(function (cs, c) {
	                if (c.props && c.props.children && c.props.children.length > 0) {
	                    return cs.concat(c.props.children);
	                } else {
	                    return cs;
	                }
	            }, []), acc.concat(components));
	        }
	    }
	};
	exports.getTaskMappers = function (components) {
	    var flattened = exports.flattenComponents(components);
	    return flattened.map(function (c) {
	        return c._mapTasks;
	    }).filter(function (m) {
	        return typeof m !== 'undefined';
	    });
	};
	exports.toTasks = function (x) {
	    var arr = Array.isArray(x) ? x : [x];
	    return arr.map(function (a) {
	        if (a instanceof Task_1.default || a instanceof Call_1.default) {
	            return a;
	        } else if (a instanceof Function) {
	            return new Call_1.default(a);
	        }
	    });
	};

/***/ },
/* 3 */
/***/ function(module, exports) {

	"use strict";

	exports.SCHEDULE_TASKS = '@@react-transact/SCHEDULE_TASKS';
	exports.RUN_SCHEDULED_TASKS = '@@react-transact/RUN_SCHEDULED_TASKS';
	exports.SCHEDULED_TASKS_COMPLETED = '@@react-transact/SCHEDULED_TASKS_COMPLETED';
	exports.SCHEDULED_TASKS_PENDING = '@@react-transact/SCHEDULED_TASKS_PENDING';
	exports.STANDALONE_INIT = '@@react-transact/STANDALONE_INIT';

/***/ },
/* 4 */
/***/ function(module, exports) {

	"use strict";

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Task = function () {
	    function Task(computation) {
	        var cleanup = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

	        _classCallCheck(this, Task);

	        this.computation = computation;
	        this.cleanup = cleanup;
	    }

	    _createClass(Task, [{
	        key: "fork",
	        value: function fork(rej, res, progress, cancel) {
	            this.computation(function (a) {
	                return rej(a);
	            }, function (b) {
	                return res(b);
	            }, function (c) {
	                return progress(c);
	            }, function (d) {
	                return cancel(d);
	            });
	        }
	    }, {
	        key: "chain",
	        value: function chain(g) {
	            var _this = this;

	            return new Task(function (rej, res) {
	                _this.fork(function (action) {
	                    rej(action);
	                }, function (action) {
	                    g(action).fork(function (action) {
	                        return rej(action);
	                    }, function (action) {
	                        return res(action);
	                    });
	                });
	            });
	        }
	    }, {
	        key: "map",
	        value: function map(g) {
	            var _this2 = this;

	            return new Task(function (rej, res) {
	                _this2.fork(function (action) {
	                    return rej(action);
	                }, function (action) {
	                    var valueOrPromise = g(action);
	                    if (typeof valueOrPromise.then === 'function') {
	                        valueOrPromise.then(function (value) {
	                            res(value);
	                        });
	                    } else {
	                        res(valueOrPromise);
	                    }
	                });
	            });
	        }
	    }, {
	        key: "orElse",
	        value: function orElse(f) {
	            var _this3 = this;

	            return new Task(function (rej, res) {
	                return _this3.fork(function (action) {
	                    f(action).fork(rej, res);
	                }, function (action) {
	                    res(action);
	                });
	            });
	        }
	    }, {
	        key: "cancel",
	        value: function cancel() {
	            this.cleanup();
	            this.computation = function () {};
	        }
	    }], [{
	        key: "resolve",
	        value: function resolve(action) {
	            return new Task(function (__, res) {
	                res(action);
	            });
	        }
	    }, {
	        key: "reject",
	        value: function reject(action) {
	            return new Task(function (rej, __) {
	                rej(action);
	            });
	        }
	        /*
	         * An empty task that will never resolve.
	         */

	    }, {
	        key: "empty",
	        value: function empty() {
	            return new Task(function (__, ___) {});
	        }
	        /*
	         * When given a function and a task, returns a task that when forked will
	         * first apply the returned action (either A or B) the supplied function.
	         * The resulting action is then chained.
	         */

	    }, {
	        key: "tap",
	        value: function tap(fn) {
	            var _this4 = this;

	            return function (task) {
	                return new Task(function (rej, res) {
	                    task.fork(function (a) {
	                        fn(_this4, a, true);
	                        rej(a);
	                    }, function (b) {
	                        fn(_this4, b, false);
	                        res(b);
	                    });
	                });
	            };
	        }
	    }]);

	    return Task;
	}();

	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Task;

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(1);
	var helpers_1 = __webpack_require__(2);
	var defaultOpts = {
	    onMount: false
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = function (mapTasks) {
	    var opts = arguments.length <= 1 || arguments[1] === undefined ? defaultOpts : arguments[1];

	    return function (Wrappee) {
	        var Wrapped = function (_React$Component) {
	            _inherits(Wrapped, _React$Component);

	            function Wrapped(props, context) {
	                _classCallCheck(this, Wrapped);

	                var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Wrapped).call(this, props, context));

	                _this.transact = context.transact || props.transact;
	                helpers_1.invariant(_this.transact !== null && _this.transact !== undefined, 'Cannot find `transact` from context or props. Perhaps you forgot to mount `TransactContext` as a parent?');
	                if (typeof mapTasks === 'function') {
	                    _this.transact.resolve(mapTasks(props), { immediate: opts.onMount });
	                }
	                if (typeof mapTasks === 'function' && context.router && !props.routeParams && !opts.onMount) {
	                    console.warn(Wrapped.displayName + ' is mounted in a router context, but is not a route handler. This can cause data loading issues on route change. You may want to add `@transact(..., { onMount: true })`.');
	                }
	                return _this;
	            }
	            // Internal helper to force tasks to be resolved.


	            _createClass(Wrapped, [{
	                key: 'forceResolve',
	                value: function forceResolve() {
	                    this.transact.resolve(mapTasks(this.props), { immediate: true });
	                }
	            }, {
	                key: 'render',
	                value: function render() {
	                    return React.createElement(Wrappee, Object.assign({}, this.props, {
	                        transact: this.transact
	                    }));
	                }
	            }]);

	            return Wrapped;
	        }(React.Component);
	        // For router context


	        Wrapped._mapTasks = mapTasks;
	        Wrapped.displayName = 'Transact(' + helpers_1.getDisplayName(Wrappee) + ')';
	        Wrapped.contextTypes = {
	            router: React.PropTypes.any,
	            transact: React.PropTypes.object
	        };
	        return Wrapped;
	    };
	};

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(1);
	var actions_1 = __webpack_require__(3);
	var defaultResolveOpts = {
	    immediate: false
	};
	var _React$PropTypes = React.PropTypes;
	var any = _React$PropTypes.any;
	var func = _React$PropTypes.func;
	var object = _React$PropTypes.object;
	var shape = _React$PropTypes.shape;

	var ReduxTransactContext = function (_React$Component) {
	    _inherits(ReduxTransactContext, _React$Component);

	    function ReduxTransactContext(props, context) {
	        _classCallCheck(this, ReduxTransactContext);

	        // Using store from redux

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ReduxTransactContext).call(this, props, context));

	        _this.store = context.store || props.store;
	        setTimeout(function () {
	            return _this.runTasks();
	        }, 0);
	        return _this;
	    }

	    _createClass(ReduxTransactContext, [{
	        key: 'getChildContext',
	        value: function getChildContext() {
	            return {
	                transact: {
	                    store: this.store,
	                    resolve: this.resolve.bind(this),
	                    run: this.run.bind(this)
	                }
	            };
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps() {
	            var _this2 = this;

	            setTimeout(function () {
	                return _this2.runTasks();
	            }, 0);
	        }
	    }, {
	        key: 'resolve',
	        value: function resolve(tasks) {
	            var _this3 = this;

	            var opts = arguments.length <= 1 || arguments[1] === undefined ? defaultResolveOpts : arguments[1];

	            this.store.dispatch({ type: actions_1.SCHEDULE_TASKS, payload: tasks });
	            if (opts.immediate) {
	                // Bump to next tick to avoid synchronous component render issue.
	                setTimeout(function () {
	                    return _this3.runTasks();
	                });
	            }
	        }
	    }, {
	        key: 'run',
	        value: function run(tasks, props) {
	            this.store.dispatch({
	                type: actions_1.SCHEDULE_TASKS,
	                payload: tasks
	            });
	            this.runTasks();
	        }
	    }, {
	        key: 'runTasks',
	        value: function runTasks() {
	            this.store.dispatch({ type: actions_1.RUN_SCHEDULED_TASKS });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var children = this.props.children;

	            var onlyChild = React.Children.only(children);
	            return React.cloneElement(onlyChild, { store: this.store });
	        }
	    }]);

	    return ReduxTransactContext;
	}(React.Component);

	ReduxTransactContext.displayName = 'ReduxTransactContext';
	ReduxTransactContext.contextTypes = {
	    store: object
	};
	ReduxTransactContext.childContextTypes = {
	    transact: shape({
	        store: any,
	        resolve: func,
	        run: func
	    })
	};
	ReduxTransactContext.propsTypes = {
	    stateReducer: func
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = ReduxTransactContext;

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var actions_1 = __webpack_require__(3);
	var TaskQueue_1 = __webpack_require__(10);
	var helpers_1 = __webpack_require__(2);
	var Task_1 = __webpack_require__(4);
	var makeMiddleware = function makeMiddleware(routerProps) {
	    var queue = new TaskQueue_1.default();
	    var _res = function _res(a) {};
	    var done = new Promise(function (res) {
	        _res = res;
	    });
	    var pendingCount = 0;
	    var middleware = function middleware(store) {
	        if (routerProps) {
	            (function () {
	                var mappers = helpers_1.getTaskMappers(routerProps.components);
	                // After store is created, run initial tasks, if any.
	                setTimeout(function () {
	                    mappers.forEach(function (mapper) {
	                        store.dispatch({ type: actions_1.SCHEDULE_TASKS, payload: mapper(routerProps) });
	                    });
	                    store.dispatch({ type: actions_1.RUN_SCHEDULED_TASKS });
	                }, 0);
	            })();
	        }
	        return function (next) {
	            return function (action) {
	                // If a task is returned, then schedule and run it.
	                // TODO: Should come up with a better abstraction for Task vs action dispatches
	                //       so that we don't need to fork the code like this with a duplicated resolve call.
	                if (action instanceof Task_1.default) {
	                    queue.push(action);
	                    // queue.push({ mapper: () => [action], props: {}})
	                    setTimeout(function () {
	                        return store.dispatch({ type: actions_1.SCHEDULED_TASKS_PENDING });
	                    });
	                    queue.run(store.dispatch).then(function (results) {
	                        _res(results);
	                        setTimeout(function () {
	                            return store.dispatch({ type: actions_1.SCHEDULED_TASKS_COMPLETED, payload: { results: results } });
	                        });
	                    });
	                } else {
	                    switch (action.type) {
	                        case actions_1.SCHEDULE_TASKS:
	                            queue.push(action.payload);
	                            return;
	                        case actions_1.RUN_SCHEDULED_TASKS:
	                            if (pendingCount === 0) {
	                                // Need to push to next tick in case we are in the middle of a render.
	                                setTimeout(function () {
	                                    return store.dispatch({ type: actions_1.SCHEDULED_TASKS_PENDING });
	                                });
	                            }
	                            pendingCount = pendingCount + 1;
	                            queue.run(store.dispatch).then(function (results) {
	                                pendingCount = pendingCount - 1;
	                                if (pendingCount === 0) {
	                                    // Need to push to next tick in case we are in the middle of a render.
	                                    setTimeout(function () {
	                                        return store.dispatch({ type: actions_1.SCHEDULED_TASKS_COMPLETED, payload: { results: results } });
	                                    });
	                                    setTimeout(function () {
	                                        return _res(results);
	                                    });
	                                }
	                            });
	                            return;
	                        default:
	                            return next(action);
	                    }
	                }
	            };
	        };
	    };
	    middleware.done = done;
	    return middleware;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = makeMiddleware;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	var React = __webpack_require__(1);
	var transact_1 = __webpack_require__(5);
	var helpers_1 = __webpack_require__(2);
	// Takes in route params and location query and returns a component props object.
	// If the value is empty, then the default is used.
	var toProps = function toProps(paramNames, queryNames, defaults, props) {
	    return Object.assign(queryNames.reduce(function (acc, name) {
	        return Object.assign(acc, _defineProperty({}, name, props.location.query[name] || defaults[name]));
	    }, {}), paramNames.reduce(function (acc, name) {
	        return Object.assign(acc, _defineProperty({}, name, props.params[name] || defaults[name]));
	    }, {}));
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = function (first, mapper) {
	    var paramNames = void 0;
	    var queryNames = void 0;
	    var defaults = void 0;
	    // Task mapper is either the first and only argument, or it is the last.
	    if (first instanceof Array) {
	        paramNames = first;
	        queryNames = [];
	        defaults = {};
	    } else {
	        paramNames = first.params || [];
	        queryNames = first.query || [];
	        defaults = first.defaults;
	    }
	    helpers_1.invariant(typeof mapper === 'function', '@transact.router called without a task mapper function as the last argument');
	    return function (Wrappee) {
	        var Inner = transact_1.default(mapper, { onMount: true })(function (props) {
	            return React.createElement(Wrappee, props);
	        });

	        var Wrapped = function (_React$Component) {
	            _inherits(Wrapped, _React$Component);

	            function Wrapped(props, context) {
	                _classCallCheck(this, Wrapped);

	                var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Wrapped).call(this, props, context));

	                _this._inner = null;
	                _this.state = {
	                    routeProps: toProps(paramNames, queryNames, defaults, props)
	                };
	                return _this;
	            }

	            _createClass(Wrapped, [{
	                key: 'componentWillReceiveProps',
	                value: function componentWillReceiveProps(nextProps) {
	                    var _this2 = this;

	                    var nextParamProps = toProps(paramNames, queryNames, defaults, nextProps);
	                    if (!helpers_1.shallowEqual(this.state.routeProps, nextParamProps)) {
	                        // Set the state, then call the @transact component to resolve its tasks again.
	                        this.setState({ routeProps: nextParamProps }, function () {
	                            _this2._inner.forceResolve();
	                        });
	                    }
	                }
	            }, {
	                key: 'render',
	                value: function render() {
	                    var _this3 = this;

	                    return React.createElement(Inner, Object.assign({
	                        ref: function ref(r) {
	                            return _this3._inner = r;
	                        },
	                        children: this.props.children
	                    }, this.state.routeProps));
	                }
	            }]);

	            return Wrapped;
	        }(React.Component);

	        Wrapped.displayName = 'TransactRoute(' + helpers_1.getDisplayName(Wrappee) + ')';
	        Wrapped._mapTasks = function (props) {
	            return mapper(toProps(paramNames, queryNames, defaults, props));
	        };
	        Wrapped.contextTypes = {
	            router: React.PropTypes.any,
	            transact: React.PropTypes.object
	        };
	        return Wrapped;
	    };
	};

/***/ },
/* 9 */
/***/ function(module, exports) {

	"use strict";
	/*
	 * Wraps a potentially effectful function inside the structure Call.
	 * This allows testing against structures as opposed mocking side effects.
	 */

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Call = function () {
	    function Call(computation) {
	        _classCallCheck(this, Call);

	        this.computation = null;
	        this.args = null;
	        this.computation = computation;

	        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	            args[_key - 1] = arguments[_key];
	        }

	        this.args = args;
	    }

	    _createClass(Call, [{
	        key: "fork",
	        value: function fork(callback, progress, cancel) {
	            try {
	                var a = this.computation.apply(this, _toConsumableArray(this.args));
	                if (a instanceof Promise) {
	                    a.then(function (c) {
	                        return callback(c);
	                    }, function (d) {
	                        return callback(d);
	                    });
	                } else {
	                    callback(a);
	                }
	            } catch (e) {
	                callback(e);
	            }
	        }
	    }, {
	        key: "chain",
	        value: function chain(g) {
	            var _this = this;

	            return new Call(function () {
	                return new Promise(function (res, rej) {
	                    _this.fork(function (x) {
	                        try {
	                            var u = g(x);
	                            res(u);
	                        } catch (e) {
	                            rej(e);
	                        }
	                    });
	                });
	            });
	        }
	    }]);

	    return Call;
	}();

	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Call;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Task_1 = __webpack_require__(4);
	var helpers_1 = __webpack_require__(2);
	/*
	 * The `TaskQueue` is responsible for queueing and resolving tasks. Each `run` call
	 * returns a promise that resolves with the results of the tasks.
	 *
	 * Total order is guaranteed for all task results, and each run calls. That is, every
	 * call to `run` will only resolve afer the previous `run` has resolved. The results
	 * array is ordered by the same ordering as the submitted tasks array.
	 */

	var TaskQueue = function () {
	    function TaskQueue() {
	        _classCallCheck(this, TaskQueue);

	        this.queue = [];
	        this.pending = Promise.resolve([]);
	    }

	    _createClass(TaskQueue, [{
	        key: "push",
	        value: function push(a) {
	            var tasks = void 0;
	            if (Array.isArray(a)) {
	                tasks = a;
	            } else if (a instanceof Task_1.default) {
	                tasks = [a];
	            } else {
	                throw new Error('TaskQueue#push must be passed a Task instance.');
	            }
	            this.queue.push({ tasks: helpers_1.compact(tasks) });
	        }
	    }, {
	        key: "run",
	        value: function run(onResult) {
	            var _this = this;

	            var size = this.size;
	            var prevPending = this.pending;
	            // Chaining the previous pending tasks so they will resolve in order.
	            var chained = new Promise(function (outerResolve) {
	                if (size === 0) {
	                    outerResolve([]);
	                } else {
	                    (function () {
	                        // WARNING: Mutating the queue so the next run call won't run through same queued tasks.
	                        var currentQueue = _this.queue;
	                        _this.queue = [];
	                        // WARNING: Watch out! This will mutate!
	                        var count = 0;
	                        currentQueue.reduce(function (acc, transaction) {
	                            // If a component applies transformations using `.chain` but need to commit one of the intermediary
	                            // actions to the system, then this commit function can be used.
	                            // TODO: Provide a mechanism for committing intermediary task results.
	                            // const commit = Task.tap((task: ITask<any, any>, action, rejected: boolean) => {
	                            //   onResult(action)
	                            // })
	                            var tasks = transaction.tasks;

	                            return acc.then(function (accResults) {
	                                return new Promise(function (innerResolve) {
	                                    // No tasks to run? Resolve immediately.
	                                    if (tasks.length === 0) {
	                                        innerResolve(accResults);
	                                    }
	                                    var results = [];
	                                    tasks.forEach(function (task) {
	                                        count = count + 1;
	                                        var rejAndRes = function rejAndRes(a) {
	                                            count = count - 1;
	                                            // Ensure the previous `run` completes before we invoke the callback.
	                                            // This is done to guarantee total ordering of action dispatches.
	                                            prevPending.then(function () {
	                                                return onResult(a);
	                                            });
	                                            results.push({ task: task, result: a });
	                                            // Once the last computation finishes, resolve promise.
	                                            if (count === 0) {
	                                                innerResolve(accResults.concat(results));
	                                            }
	                                        };
	                                        // Bump to next tick so we give all tasks a chance to increment
	                                        // count before being forked.
	                                        setTimeout(function () {
	                                            return task.fork(rejAndRes, rejAndRes, function (c) {
	                                                return prevPending.then(function () {
	                                                    return onResult(c);
	                                                });
	                                            });
	                                        }, 0);
	                                    });
	                                });
	                            });
	                        }, Promise.resolve([])).then(function (results) {
	                            outerResolve(results);
	                        });
	                    })();
	                }
	            });
	            // Set the pending promise to the next in chain.
	            this.pending = this.pending.then(function () {
	                return chained;
	            });
	            // Return new pending promise so the caller can wait for all previously scheduled tasks
	            // and currently scheduled tasks to complete before resolution (total ordering).
	            return this.pending;
	        }
	    }, {
	        key: "size",
	        get: function get() {
	            return this.queue.length;
	        }
	    }]);

	    return TaskQueue;
	}();

	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = TaskQueue;

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var route_1 = __webpack_require__(8);
	var transact_1 = __webpack_require__(5);
	var ReduxTransactContext_1 = __webpack_require__(6);
	exports.ReduxTransactContext = ReduxTransactContext_1.default;
	var middleware_1 = __webpack_require__(7);
	exports.reduxTransact = middleware_1.default;
	var actions_1 = __webpack_require__(3);
	exports.RUN_SCHEDULED_TASKS = actions_1.RUN_SCHEDULED_TASKS;
	exports.SCHEDULE_TASKS = actions_1.SCHEDULE_TASKS;
	exports.STANDALONE_INIT = actions_1.STANDALONE_INIT;
	exports.SCHEDULED_TASKS_PENDING = actions_1.SCHEDULED_TASKS_PENDING;
	exports.SCHEDULED_TASKS_COMPLETED = actions_1.SCHEDULED_TASKS_COMPLETED;
	var transact = transact_1.default;
	transact.route = route_1.default;
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = {
	    RUN_SCHEDULED_TASKS: actions_1.RUN_SCHEDULED_TASKS,
	    SCHEDULE_TASKS: actions_1.SCHEDULE_TASKS,
	    STANDALONE_INIT: actions_1.STANDALONE_INIT,
	    SCHEDULED_TASKS_PENDING: actions_1.SCHEDULED_TASKS_PENDING,
	    SCHEDULED_TASKS_COMPLETED: actions_1.SCHEDULED_TASKS_COMPLETED,
	    ReduxTransactContext: ReduxTransactContext_1.default,
	    reduxTransact: middleware_1.default
	};

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {"use strict";

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	!function (t, e) {
	  "object" == ( false ? "undefined" : _typeof(exports)) && "object" == ( false ? "undefined" : _typeof(module)) ? module.exports = e(__webpack_require__(1)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_FACTORY__ = (e), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) ? exports.ReactTransact = e(require("react")) : t.ReactTransact = e(t.React);
	}(undefined, function (t) {
	  return function (t) {
	    function e(r) {
	      if (n[r]) return n[r].exports;var o = n[r] = { exports: {}, id: r, loaded: !1 };return t[r].call(o.exports, o, o.exports, e), o.loaded = !0, o.exports;
	    }var n = {};return e.m = t, e.c = n, e.p = "", e(0);
	  }([function (t, e, n) {
	    "use strict";
	    var r = n(8),
	        o = n(5),
	        u = n(6);e.ReduxTransactContext = u["default"];var i = n(7);e.reduxTransact = i["default"];var a = n(2);e.RUN_SCHEDULED_TASKS = a.RUN_SCHEDULED_TASKS, e.SCHEDULE_TASKS = a.SCHEDULE_TASKS, e.STANDALONE_INIT = a.STANDALONE_INIT, e.SCHEDULED_TASKS_PENDING = a.SCHEDULED_TASKS_PENDING, e.SCHEDULED_TASKS_COMPLETED = a.SCHEDULED_TASKS_COMPLETED;var c = o["default"];c.route = r["default"], Object.defineProperty(e, "__esModule", { value: !0 }), e["default"] = { RUN_SCHEDULED_TASKS: a.RUN_SCHEDULED_TASKS, SCHEDULE_TASKS: a.SCHEDULE_TASKS, STANDALONE_INIT: a.STANDALONE_INIT, SCHEDULED_TASKS_PENDING: a.SCHEDULED_TASKS_PENDING, SCHEDULED_TASKS_COMPLETED: a.SCHEDULED_TASKS_COMPLETED, ReduxTransactContext: u["default"], reduxTransact: i["default"] };
	  }, function (t, e, n) {
	    "use strict";
	    var r = n(9),
	        o = n(3);e.invariant = function (t, e) {
	      if (!t) throw new Error(e);
	    }, e.shallowEqual = function (t, e) {
	      if (t === e) return !0;var n = Object.keys(t),
	          r = Object.keys(e);if (n.length !== r.length) return !1;for (var o = Object.prototype.hasOwnProperty, u = 0; u < n.length; u++) {
	        if (!o.call(e, n[u]) || t[n[u]] !== e[n[u]]) return !1;
	      }return !0;
	    }, e.getDisplayName = function (t) {
	      return t.displayName || t.name || "Component";
	    }, e.compact = function (t) {
	      return t.filter(function (t) {
	        return null !== t && "undefined" != typeof t;
	      });
	    }, e.applyValueOrPromise = function (t, e) {
	      "function" == typeof e.then ? e.then(t) : t(e);
	    }, e.flattenComponents = function (t) {
	      function e(t, n) {
	        return 0 === t.length ? n : e(t.reduce(function (t, e) {
	          return e.props && e.props.children && e.props.children.length > 0 ? t.concat(e.props.children) : t;
	        }, []), n.concat(t));
	      }return e(t, []);
	    }, e.getTaskMappers = function (t) {
	      var n = e.flattenComponents(t);return n.map(function (t) {
	        return t._mapTasks;
	      }).filter(function (t) {
	        return "undefined" != typeof t;
	      });
	    }, e.toTasks = function (t) {
	      var e = Array.isArray(t) ? t : [t];return e.map(function (t) {
	        return t instanceof o["default"] || t instanceof r["default"] ? t : t instanceof Function ? new r["default"](t) : void 0;
	      });
	    };
	  }, function (t, e) {
	    "use strict";
	    e.SCHEDULE_TASKS = "@@react-transact/SCHEDULE_TASKS", e.RUN_SCHEDULED_TASKS = "@@react-transact/RUN_SCHEDULED_TASKS", e.SCHEDULED_TASKS_COMPLETED = "@@react-transact/SCHEDULED_TASKS_COMPLETED", e.SCHEDULED_TASKS_PENDING = "@@react-transact/SCHEDULED_TASKS_PENDING", e.STANDALONE_INIT = "@@react-transact/STANDALONE_INIT";
	  }, function (t, e) {
	    "use strict";
	    function n(t, e) {
	      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
	    }var r = function () {
	      function t(t, e) {
	        for (var n = 0; n < e.length; n++) {
	          var r = e[n];r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);
	        }
	      }return function (e, n, r) {
	        return n && t(e.prototype, n), r && t(e, r), e;
	      };
	    }(),
	        o = function () {
	      function t(e) {
	        var r = arguments.length <= 1 || void 0 === arguments[1] ? function () {} : arguments[1];n(this, t), this.computation = e, this.cleanup = r;
	      }return r(t, [{ key: "fork", value: function value(t, e, n, r) {
	          this.computation(function (e) {
	            return t(e);
	          }, function (t) {
	            return e(t);
	          }, function (t) {
	            return n(t);
	          }, function (t) {
	            return r(t);
	          });
	        } }, { key: "chain", value: function value(e) {
	          var n = this;return new t(function (t, r) {
	            n.fork(function (e) {
	              t(e);
	            }, function (n) {
	              e(n).fork(function (e) {
	                return t(e);
	              }, function (t) {
	                return r(t);
	              });
	            });
	          });
	        } }, { key: "map", value: function value(e) {
	          var n = this;return new t(function (t, r) {
	            n.fork(function (e) {
	              return t(e);
	            }, function (t) {
	              var n = e(t);"function" == typeof n.then ? n.then(function (t) {
	                r(t);
	              }) : r(n);
	            });
	          });
	        } }, { key: "orElse", value: function value(e) {
	          var n = this;return new t(function (t, r) {
	            return n.fork(function (n) {
	              e(n).fork(t, r);
	            }, function (t) {
	              r(t);
	            });
	          });
	        } }, { key: "cancel", value: function value() {
	          this.cleanup(), this.computation = function () {};
	        } }], [{ key: "resolve", value: function value(e) {
	          return new t(function (t, n) {
	            n(e);
	          });
	        } }, { key: "reject", value: function value(e) {
	          return new t(function (t, n) {
	            t(e);
	          });
	        } }, { key: "empty", value: function value() {
	          return new t(function (t, e) {});
	        } }, { key: "tap", value: function value(e) {
	          var n = this;return function (r) {
	            return new t(function (t, o) {
	              r.fork(function (r) {
	                e(n, r, !0), t(r);
	              }, function (t) {
	                e(n, t, !1), o(t);
	              });
	            });
	          };
	        } }]), t;
	    }();Object.defineProperty(e, "__esModule", { value: !0 }), e["default"] = o;
	  }, function (e, n) {
	    e.exports = t;
	  }, function (t, e, n) {
	    "use strict";
	    function r(t, e) {
	      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
	    }function o(t, e) {
	      if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return !e || "object" != (typeof e === "undefined" ? "undefined" : _typeof(e)) && "function" != typeof e ? t : e;
	    }function u(t, e) {
	      if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + (typeof e === "undefined" ? "undefined" : _typeof(e)));t.prototype = Object.create(e && e.prototype, { constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 } }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
	    }var i = function () {
	      function t(t, e) {
	        for (var n = 0; n < e.length; n++) {
	          var r = e[n];r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);
	        }
	      }return function (e, n, r) {
	        return n && t(e.prototype, n), r && t(e, r), e;
	      };
	    }(),
	        a = n(4),
	        c = n(1),
	        s = { onMount: !1 };Object.defineProperty(e, "__esModule", { value: !0 }), e["default"] = function (t) {
	      var e = arguments.length <= 1 || void 0 === arguments[1] ? s : arguments[1];return function (n) {
	        var s = function (s) {
	          function f(n, u) {
	            r(this, f);var i = o(this, Object.getPrototypeOf(f).call(this, n, u));return i.transact = u.transact || n.transact, c.invariant(null !== i.transact && void 0 !== i.transact, "Cannot find `transact` from context or props. Perhaps you forgot to mount `TransactContext` as a parent?"), "function" == typeof t && i.transact.resolve(t(n), { immediate: e.onMount }), "function" != typeof t || !u.router || n.routeParams || e.onMount || console.warn(f.displayName + " is mounted in a router context, but is not a route handler. This can cause data loading issues on route change. You may want to add `@transact(..., { onMount: true })`."), i;
	          }return u(f, s), i(f, [{ key: "forceResolve", value: function value() {
	              this.transact.resolve(t(this.props), { immediate: !0 });
	            } }, { key: "render", value: function value() {
	              return a.createElement(n, Object.assign({}, this.props, { transact: this.transact }));
	            } }]), f;
	        }(a.Component);return s._mapTasks = t, s.displayName = "Transact(" + c.getDisplayName(n) + ")", s.contextTypes = { router: a.PropTypes.any, transact: a.PropTypes.object }, s;
	      };
	    };
	  }, function (t, e, n) {
	    "use strict";
	    function r(t, e) {
	      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
	    }function o(t, e) {
	      if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return !e || "object" != (typeof e === "undefined" ? "undefined" : _typeof(e)) && "function" != typeof e ? t : e;
	    }function u(t, e) {
	      if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + (typeof e === "undefined" ? "undefined" : _typeof(e)));t.prototype = Object.create(e && e.prototype, { constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 } }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
	    }var i = function () {
	      function t(t, e) {
	        for (var n = 0; n < e.length; n++) {
	          var r = e[n];r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);
	        }
	      }return function (e, n, r) {
	        return n && t(e.prototype, n), r && t(e, r), e;
	      };
	    }(),
	        a = n(4),
	        c = n(2),
	        s = { immediate: !1 },
	        f = a.PropTypes,
	        l = f.any,
	        p = f.func,
	        h = f.object,
	        y = f.shape,
	        d = function (t) {
	      function e(t, n) {
	        r(this, e);var u = o(this, Object.getPrototypeOf(e).call(this, t, n));return u.store = n.store || t.store, setTimeout(function () {
	          return u.runTasks();
	        }, 0), u;
	      }return u(e, t), i(e, [{ key: "getChildContext", value: function value() {
	          return { transact: { store: this.store, resolve: this.resolve.bind(this), run: this.run.bind(this) } };
	        } }, { key: "componentWillReceiveProps", value: function value() {
	          var t = this;setTimeout(function () {
	            return t.runTasks();
	          }, 0);
	        } }, { key: "resolve", value: function value(t) {
	          var e = this,
	              n = arguments.length <= 1 || void 0 === arguments[1] ? s : arguments[1];this.store.dispatch({ type: c.SCHEDULE_TASKS, payload: t }), n.immediate && setTimeout(function () {
	            return e.runTasks();
	          });
	        } }, { key: "run", value: function value(t, e) {
	          this.store.dispatch({ type: c.SCHEDULE_TASKS, payload: t }), this.runTasks();
	        } }, { key: "runTasks", value: function value() {
	          this.store.dispatch({ type: c.RUN_SCHEDULED_TASKS });
	        } }, { key: "render", value: function value() {
	          var t = this.props.children,
	              e = a.Children.only(t);return a.cloneElement(e, { store: this.store });
	        } }]), e;
	    }(a.Component);d.displayName = "ReduxTransactContext", d.contextTypes = { store: h }, d.childContextTypes = { transact: y({ store: l, resolve: p, run: p }) }, d.propsTypes = { stateReducer: p }, Object.defineProperty(e, "__esModule", { value: !0 }), e["default"] = d;
	  }, function (t, e, n) {
	    "use strict";
	    var r = n(2),
	        o = n(10),
	        u = n(1),
	        i = n(3),
	        a = function a(t) {
	      var e = new o["default"](),
	          n = function n(t) {},
	          a = new Promise(function (t) {
	        n = t;
	      }),
	          c = 0,
	          s = function s(o) {
	        return t && !function () {
	          var e = u.getTaskMappers(t.components);setTimeout(function () {
	            e.forEach(function (e) {
	              o.dispatch({ type: r.SCHEDULE_TASKS, payload: e(t) });
	            }), o.dispatch({ type: r.RUN_SCHEDULED_TASKS });
	          }, 0);
	        }(), function (t) {
	          return function (u) {
	            if (u instanceof i["default"]) e.push(u), setTimeout(function () {
	              return o.dispatch({ type: r.SCHEDULED_TASKS_PENDING });
	            }), e.run(o.dispatch).then(function (t) {
	              n(t), setTimeout(function () {
	                return o.dispatch({ type: r.SCHEDULED_TASKS_COMPLETED, payload: { results: t } });
	              });
	            });else switch (u.type) {case r.SCHEDULE_TASKS:
	                return void e.push(u.payload);case r.RUN_SCHEDULED_TASKS:
	                return 0 === c && setTimeout(function () {
	                  return o.dispatch({ type: r.SCHEDULED_TASKS_PENDING });
	                }), c += 1, void e.run(o.dispatch).then(function (t) {
	                  c -= 1, 0 === c && (setTimeout(function () {
	                    return o.dispatch({ type: r.SCHEDULED_TASKS_COMPLETED, payload: { results: t } });
	                  }), setTimeout(function () {
	                    return n(t);
	                  }));
	                });default:
	                return t(u);}
	          };
	        };
	      };return s.done = a, s;
	    };Object.defineProperty(e, "__esModule", { value: !0 }), e["default"] = a;
	  }, function (t, e, n) {
	    "use strict";
	    function r(t, e) {
	      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
	    }function o(t, e) {
	      if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return !e || "object" != (typeof e === "undefined" ? "undefined" : _typeof(e)) && "function" != typeof e ? t : e;
	    }function u(t, e) {
	      if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + (typeof e === "undefined" ? "undefined" : _typeof(e)));t.prototype = Object.create(e && e.prototype, { constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 } }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
	    }function i(t, e, n) {
	      return e in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
	    }var a = function () {
	      function t(t, e) {
	        for (var n = 0; n < e.length; n++) {
	          var r = e[n];r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);
	        }
	      }return function (e, n, r) {
	        return n && t(e.prototype, n), r && t(e, r), e;
	      };
	    }(),
	        c = n(4),
	        s = n(5),
	        f = n(1),
	        l = function l(t, e, n, r) {
	      return Object.assign(e.reduce(function (t, e) {
	        return Object.assign(t, i({}, e, r.location.query[e] || n[e]));
	      }, {}), t.reduce(function (t, e) {
	        return Object.assign(t, i({}, e, r.params[e] || n[e]));
	      }, {}));
	    };Object.defineProperty(e, "__esModule", { value: !0 }), e["default"] = function (t, e) {
	      var n = void 0,
	          i = void 0,
	          p = void 0;return t instanceof Array ? (n = t, i = [], p = {}) : (n = t.params || [], i = t.query || [], p = t.defaults), f.invariant("function" == typeof e, "@transact.router called without a task mapper function as the last argument"), function (t) {
	        var h = s["default"](e, { onMount: !0 })(function (e) {
	          return c.createElement(t, e);
	        }),
	            y = function (t) {
	          function e(t, u) {
	            r(this, e);var a = o(this, Object.getPrototypeOf(e).call(this, t, u));return a._inner = null, a.state = { routeProps: l(n, i, p, t) }, a;
	          }return u(e, t), a(e, [{ key: "componentWillReceiveProps", value: function value(t) {
	              var e = this,
	                  r = l(n, i, p, t);f.shallowEqual(this.state.routeProps, r) || this.setState({ routeProps: r }, function () {
	                e._inner.forceResolve();
	              });
	            } }, { key: "render", value: function value() {
	              var t = this;return c.createElement(h, Object.assign({ ref: function ref(e) {
	                  return t._inner = e;
	                }, children: this.props.children }, this.state.routeProps));
	            } }]), e;
	        }(c.Component);return y.displayName = "TransactRoute(" + f.getDisplayName(t) + ")", y._mapTasks = function (t) {
	          return e(l(n, i, p, t));
	        }, y.contextTypes = { router: c.PropTypes.any, transact: c.PropTypes.object }, y;
	      };
	    };
	  }, function (t, e) {
	    "use strict";
	    function n(t) {
	      if (Array.isArray(t)) {
	        for (var e = 0, n = Array(t.length); e < t.length; e++) {
	          n[e] = t[e];
	        }return n;
	      }return Array.from(t);
	    }function r(t, e) {
	      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
	    }var o = function () {
	      function t(t, e) {
	        for (var n = 0; n < e.length; n++) {
	          var r = e[n];r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);
	        }
	      }return function (e, n, r) {
	        return n && t(e.prototype, n), r && t(e, r), e;
	      };
	    }(),
	        u = function () {
	      function t(e) {
	        r(this, t), this.computation = null, this.args = null, this.computation = e;for (var n = arguments.length, o = Array(n > 1 ? n - 1 : 0), u = 1; n > u; u++) {
	          o[u - 1] = arguments[u];
	        }this.args = o;
	      }return o(t, [{ key: "fork", value: function value(t, e, r) {
	          try {
	            var o = this.computation.apply(this, n(this.args));o instanceof Promise ? o.then(function (e) {
	              return t(e);
	            }, function (e) {
	              return t(e);
	            }) : t(o);
	          } catch (u) {
	            t(u);
	          }
	        } }, { key: "chain", value: function value(e) {
	          var n = this;return new t(function () {
	            return new Promise(function (t, r) {
	              n.fork(function (n) {
	                try {
	                  var o = e(n);t(o);
	                } catch (u) {
	                  r(u);
	                }
	              });
	            });
	          });
	        } }]), t;
	    }();Object.defineProperty(e, "__esModule", { value: !0 }), e["default"] = u;
	  }, function (t, e, n) {
	    "use strict";
	    function r(t, e) {
	      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
	    }var o = function () {
	      function t(t, e) {
	        for (var n = 0; n < e.length; n++) {
	          var r = e[n];r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);
	        }
	      }return function (e, n, r) {
	        return n && t(e.prototype, n), r && t(e, r), e;
	      };
	    }(),
	        u = n(3),
	        i = n(1),
	        a = function () {
	      function t() {
	        r(this, t), this.queue = [], this.pending = Promise.resolve([]);
	      }return o(t, [{ key: "push", value: function value(t) {
	          var e = void 0;if (Array.isArray(t)) e = t;else {
	            if (!(t instanceof u["default"])) throw new Error("TaskQueue#push must be passed a Task instance.");e = [t];
	          }this.queue.push({ tasks: i.compact(e) });
	        } }, { key: "run", value: function value(t) {
	          var e = this,
	              n = this.size,
	              r = this.pending,
	              o = new Promise(function (o) {
	            0 === n ? o([]) : !function () {
	              var n = e.queue;e.queue = [];var u = 0;n.reduce(function (e, n) {
	                var o = n.tasks;return e.then(function (e) {
	                  return new Promise(function (n) {
	                    0 === o.length && n(e);var i = [];o.forEach(function (o) {
	                      u += 1;var a = function a(_a) {
	                        u -= 1, r.then(function () {
	                          return t(_a);
	                        }), i.push({ task: o, result: _a }), 0 === u && n(e.concat(i));
	                      };setTimeout(function () {
	                        return o.fork(a, a, function (e) {
	                          return r.then(function () {
	                            return t(e);
	                          });
	                        });
	                      }, 0);
	                    });
	                  });
	                });
	              }, Promise.resolve([])).then(function (t) {
	                o(t);
	              });
	            }();
	          });return this.pending = this.pending.then(function () {
	            return o;
	          }), this.pending;
	        } }, { key: "size", get: function get() {
	          return this.queue.length;
	        } }]), t;
	    }();Object.defineProperty(e, "__esModule", { value: !0 }), e["default"] = a;
	  }]);
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)(module)))

/***/ },
/* 13 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ }
/******/ ])
});
;